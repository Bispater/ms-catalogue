version: '3.8'

services:
  web:
    build: .
    command: >
      sh -c "python manage.py makemigrations && 
             python manage.py migrate && 
             python manage.py collectstatic --noinput && 
             python manage.py runserver 0.0.0.0:8050"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8050:8050"
    env_file:
      - .env
    environment:
      - DOCKER_ENV=true
      - PYTHONUNBUFFERED=1
      - DJANGO_DEBUG=True
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: postgres:13
    environment:
      POSTGRES_DB: ms_catalogue_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./config/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./config/postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf
    ports:
      - "5333:5432"
    command: >
      -c config_file=/etc/postgresql/postgresql.conf
      -c hba_file=/etc/postgresql/pg_hba.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ms_catalogue_db"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

volumes:
  postgres_data:
  static_volume:
  media_volume:
